Index: linux-3.4.11/Kconfig.bcm
===================================================================
--- linux-3.4.11.orig/Kconfig.bcm	2016-04-22 15:21:43.398503122 +0800
+++ linux-3.4.11/Kconfig.bcm	2016-04-22 15:34:25.204118191 +0800
@@ -658,6 +658,10 @@
 config BCM_PROCFS
 	tristate "Support for PROCFS"
 
+config BCM_P8021AG
+	tristate "Support for IEEE P8021.ag"
+#	depends on MIPS
+
 config BCM_TRNG
 	tristate "BCM HW Random Number Generator support"
 #	---help---
@@ -863,6 +867,10 @@
 	int "Implementation index for PWRMNGT"
 	depends on BCM_PWRMNGT
 
+config BCM_P8021AG_IMPL
+	int "Implementation index for IEEE P8021AG"
+	depends on BCM_P8021AG
+
 config BCM_ARL_IMPL
 	int "Implementation index for ARL"
 	depends on BCM_ARL
Index: linux-3.4.11/Kconfig.bcm_kf
===================================================================
--- linux-3.4.11.orig/Kconfig.bcm_kf	2016-04-22 15:32:29.848122052 +0800
+++ linux-3.4.11/Kconfig.bcm_kf	2016-04-22 15:34:25.208118191 +0800
@@ -187,6 +187,10 @@
 	bool
 	default y
 
+config BCM_KF_P8021AG:
+	bool
+	default y
+
 config BCM_KF_NETDEV_PATH:
 	bool
 	default y
Index: linux-3.4.11/net/core/dev.c
===================================================================
--- linux-3.4.11.orig/net/core/dev.c	2016-04-22 15:29:55.172127228 +0800
+++ linux-3.4.11/net/core/dev.c	2016-04-22 15:34:25.208118191 +0800
@@ -213,6 +213,10 @@
  */
 DEFINE_RWLOCK(dev_base_lock);
 EXPORT_SYMBOL(dev_base_lock);
+#if defined(CONFIG_BCM_KF_P8021AG) && (defined(CONFIG_BCM_P8021AG) || defined(CONFIG_BCM_P8021AG_MODULE))
+int (*p8021ag_hook)(struct sk_buff *skb);
+EXPORT_SYMBOL(p8021ag_hook);
+#endif
 
 
 static inline void dev_base_seq_inc(struct net *net)
@@ -3783,6 +3787,15 @@
 			goto out;
 	}
 
+#if defined(CONFIG_BCM_KF_P8021AG) && (defined(CONFIG_BCM_P8021AG) || defined(CONFIG_BCM_P8021AG_MODULE))
+//#if !defined(CONFIG_BCM_TMS_MODULE)
+
+	if (((skb->protocol == __constant_htons(ETH_P_8021AG)) ||
+		 (skb->protocol == __constant_htons(ETH_P_8021Q) && *(unsigned short *) &skb->data[2] == ETH_P_8021AG))
+		 && p8021ag_hook && !p8021ag_hook(skb) )
+        goto out;
+//#endif
+#endif
 #ifdef CONFIG_NET_CLS_ACT
 	if (skb->tc_verd & TC_NCLS) {
 		skb->tc_verd = CLR_TC_NCLS(skb->tc_verd);
